{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 16, "column": 0}, "map": {"version":3,"sources":["file:///D:/Khedme/Khedme-Web/pages/jobs/%5Bid%5D.js"],"sourcesContent":["import { useState, useEffect } from \"react\";\r\nimport { useRouter } from \"next/router\";\r\nimport toast, { Toaster } from \"react-hot-toast\";\r\n\r\nexport default function JobDetails() {\r\n  const router = useRouter();\r\n  const { id } = router.query;\r\n  const [job, setJob] = useState(null);\r\n  const [showForm, setShowForm] = useState(false);\r\n  const [message, setMessage] = useState(\"\");\r\n\r\n  // ✅ Simulated logged-in provider (hardcoded)\r\n  const providerId = 1;\r\n\r\n  // ✅ Fetch job details\r\n  useEffect(() => {\r\n    if (!id) return;\r\n    fetch(`https://khedme-api.onrender.com/api/jobs/${id}`)\r\n      .then((res) => res.json())\r\n      .then((data) => setJob(data.job))\r\n      .catch(() => toast.error(\"Failed to load job\"));\r\n  }, [id]);\r\n\r\n  // ✅ Handle application submit\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n\r\n    try {\r\n      const res = await fetch(\r\n        `https://khedme-api.onrender.com/api/jobs/${id}/apply`,\r\n        {\r\n          method: \"POST\",\r\n          headers: { \"Content-Type\": \"application/json\" },\r\n          body: JSON.stringify({\r\n            provider_id: providerId,\r\n            message: message || \"\",\r\n          }),\r\n        }\r\n      );\r\n\r\n      const data = await res.json();\r\n\r\n      if (res.ok) {\r\n        toast.success(\"Application submitted successfully!\");\r\n        setShowForm(false);\r\n        setMessage(\"\");\r\n      } else {\r\n        toast.error(data.message || \"Error submitting application\");\r\n      }\r\n    } catch (error) {\r\n      toast.error(\"Network error — please try again\");\r\n    }\r\n  };\r\n\r\n  if (!job) return <div className=\"p-10 text-center\">Loading...</div>;\r\n\r\n  return (\r\n    <div className=\"min-h-screen bg-[#FFF4EB] flex flex-col items-center p-6\">\r\n      <Toaster position=\"top-center\" />\r\n      <div className=\"bg-white shadow-lg p-6 rounded-2xl w-full max-w-lg mt-10\">\r\n        <h2 className=\"text-2xl font-bold text-orange-600 mb-3\">\r\n          {job.service}\r\n        </h2>\r\n        <p className=\"text-gray-700 mb-2\">{job.description}</p>\r\n        <p className=\"text-sm text-gray-500\">\r\n          <strong>District:</strong> {job.district}\r\n        </p>\r\n        <p className=\"text-sm text-gray-500 mb-4\">\r\n          <strong>Budget:</strong> ${job.budget}\r\n        </p>\r\n\r\n        {!showForm ? (\r\n          <button\r\n            onClick={() => setShowForm(true)}\r\n            className=\"bg-orange-500 text-white px-5 py-2 rounded-lg hover:bg-orange-600 transition\"\r\n          >\r\n            Apply for this Job\r\n          </button>\r\n        ) : (\r\n          <form\r\n            onSubmit={handleSubmit}\r\n            className=\"bg-white border rounded-xl p-5 mt-4 shadow-md\"\r\n          >\r\n            <h3 className=\"text-lg font-semibold text-orange-600 mb-3\">\r\n              Apply for {job.service}\r\n            </h3>\r\n\r\n            <textarea\r\n              placeholder=\"Message (optional)\"\r\n              value={message}\r\n              onChange={(e) => setMessage(e.target.value)}\r\n              className=\"border w-full rounded-md p-2 mb-3\"\r\n            />\r\n\r\n            <div className=\"flex gap-3 justify-end\">\r\n              <button\r\n                type=\"button\"\r\n                onClick={() => setShowForm(false)}\r\n                className=\"px-4 py-2 border rounded-lg text-gray-600\"\r\n              >\r\n                Cancel\r\n              </button>\r\n              <button\r\n                type=\"submit\"\r\n                className=\"px-4 py-2 bg-orange-500 text-white rounded-lg hover:bg-orange-600\"\r\n              >\r\n                Submit\r\n              </button>\r\n            </div>\r\n          </form>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"],"names":[],"mappings":";;;;;AAAA;AACA;AACA;;;;;;;;;AAEe,SAAS;IACtB,MAAM,SAAS,IAAA,oIAAS;IACxB,MAAM,EAAE,EAAE,EAAE,GAAG,OAAO,KAAK;IAC3B,MAAM,CAAC,KAAK,OAAO,GAAG,IAAA,+GAAQ,EAAC;IAC/B,MAAM,CAAC,UAAU,YAAY,GAAG,IAAA,+GAAQ,EAAC;IACzC,MAAM,CAAC,SAAS,WAAW,GAAG,IAAA,+GAAQ,EAAC;IAEvC,6CAA6C;IAC7C,MAAM,aAAa;IAEnB,sBAAsB;IACtB,IAAA,gHAAS,EAAC;QACR,IAAI,CAAC,IAAI;QACT,MAAM,CAAC,yCAAyC,EAAE,IAAI,EACnD,IAAI,CAAC,CAAC,MAAQ,IAAI,IAAI,IACtB,IAAI,CAAC,CAAC,OAAS,OAAO,KAAK,GAAG,GAC9B,KAAK,CAAC,IAAM,qJAAK,CAAC,KAAK,CAAC;IAC7B,GAAG;QAAC;KAAG;IAEP,8BAA8B;IAC9B,MAAM,eAAe,OAAO;QAC1B,EAAE,cAAc;QAEhB,IAAI;YACF,MAAM,MAAM,MAAM,MAChB,CAAC,yCAAyC,EAAE,GAAG,MAAM,CAAC,EACtD;gBACE,QAAQ;gBACR,SAAS;oBAAE,gBAAgB;gBAAmB;gBAC9C,MAAM,KAAK,SAAS,CAAC;oBACnB,aAAa;oBACb,SAAS,WAAW;gBACtB;YACF;YAGF,MAAM,OAAO,MAAM,IAAI,IAAI;YAE3B,IAAI,IAAI,EAAE,EAAE;gBACV,qJAAK,CAAC,OAAO,CAAC;gBACd,YAAY;gBACZ,WAAW;YACb,OAAO;gBACL,qJAAK,CAAC,KAAK,CAAC,KAAK,OAAO,IAAI;YAC9B;QACF,EAAE,OAAO,OAAO;YACd,qJAAK,CAAC,KAAK,CAAC;QACd;IACF;IAEA,IAAI,CAAC,KAAK,qBAAO,qKAAC;QAAI,WAAU;kBAAmB;;;;;;IAEnD,qBACE,qKAAC;QAAI,WAAU;;0BACb,qKAAC,qJAAO;gBAAC,UAAS;;;;;;0BAClB,qKAAC;gBAAI,WAAU;;kCACb,qKAAC;wBAAG,WAAU;kCACX,IAAI,OAAO;;;;;;kCAEd,qKAAC;wBAAE,WAAU;kCAAsB,IAAI,WAAW;;;;;;kCAClD,qKAAC;wBAAE,WAAU;;0CACX,qKAAC;0CAAO;;;;;;4BAAkB;4BAAE,IAAI,QAAQ;;;;;;;kCAE1C,qKAAC;wBAAE,WAAU;;0CACX,qKAAC;0CAAO;;;;;;4BAAgB;4BAAG,IAAI,MAAM;;;;;;;oBAGtC,CAAC,yBACA,qKAAC;wBACC,SAAS,IAAM,YAAY;wBAC3B,WAAU;kCACX;;;;;6CAID,qKAAC;wBACC,UAAU;wBACV,WAAU;;0CAEV,qKAAC;gCAAG,WAAU;;oCAA6C;oCAC9C,IAAI,OAAO;;;;;;;0CAGxB,qKAAC;gCACC,aAAY;gCACZ,OAAO;gCACP,UAAU,CAAC,IAAM,WAAW,EAAE,MAAM,CAAC,KAAK;gCAC1C,WAAU;;;;;;0CAGZ,qKAAC;gCAAI,WAAU;;kDACb,qKAAC;wCACC,MAAK;wCACL,SAAS,IAAM,YAAY;wCAC3B,WAAU;kDACX;;;;;;kDAGD,qKAAC;wCACC,MAAK;wCACL,WAAU;kDACX;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AASf","debugId":null}}]
}