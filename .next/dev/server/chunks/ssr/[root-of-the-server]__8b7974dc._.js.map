{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 16, "column": 0}, "map": {"version":3,"sources":["file:///D:/Khedme/Khedme-Web/pages/provider/dashboard.js"],"sourcesContent":["import { useEffect, useState } from 'react';\r\nimport toast, { Toaster } from 'react-hot-toast';\r\n\r\nexport default function ProviderDashboard() {\r\n  const [jobs, setJobs] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    const fetchJobs = async () => {\r\n      try {\r\n        const res = await fetch('https://khedme-api.onrender.com/api/jobs/all');\r\n        const data = await res.json();\r\n        setJobs(data.jobs || []);\r\n      } catch (err) {\r\n        toast.error('Failed to load jobs');\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n    fetchJobs();\r\n  }, []);\r\n\r\n  if (loading) return <div className=\"p-10 text-center text-gray-500\">Loading...</div>;\r\n\r\n  return (\r\n    <div className=\"min-h-screen bg-gradient-to-b from-orange-50 to-white p-6\">\r\n      <Toaster position=\"top-center\" />\r\n      <h1 className=\"text-2xl font-bold text-orange-600 mb-6\">Provider Dashboard</h1>\r\n\r\n      {jobs.length === 0 ? (\r\n        <p className=\"text-gray-500\">No jobs available.</p>\r\n      ) : (\r\n        <div className=\"grid gap-4\">\r\n          {jobs.map((job) => (\r\n            <div\r\n              key={job.id}\r\n              className=\"border border-orange-200 bg-white rounded-2xl p-4 shadow-sm\"\r\n            >\r\n              <h2 className=\"font-semibold text-lg text-gray-800\">{job.service}</h2>\r\n              <p className=\"text-gray-600 text-sm\">{job.description}</p>\r\n              <p className=\"text-sm text-gray-500 mt-2\">District: {job.district}</p>\r\n              <p className=\"text-sm text-gray-500\">Budget: ${job.budget}</p>\r\n              <button\r\n                onClick={() =>\r\n                  toast.success(`Applied for job #${job.id}`)\r\n                }\r\n                className=\"mt-3 bg-orange-500 hover:bg-orange-600 text-white px-3 py-1 rounded transition\"\r\n              >\r\n                Apply\r\n              </button>\r\n            </div>\r\n          ))}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n"],"names":[],"mappings":";;;;;AAAA;AACA;;;;;;;;AAEe,SAAS;IACtB,MAAM,CAAC,MAAM,QAAQ,GAAG,IAAA,+GAAQ,EAAC,EAAE;IACnC,MAAM,CAAC,SAAS,WAAW,GAAG,IAAA,+GAAQ,EAAC;IAEvC,IAAA,gHAAS,EAAC;QACR,MAAM,YAAY;YAChB,IAAI;gBACF,MAAM,MAAM,MAAM,MAAM;gBACxB,MAAM,OAAO,MAAM,IAAI,IAAI;gBAC3B,QAAQ,KAAK,IAAI,IAAI,EAAE;YACzB,EAAE,OAAO,KAAK;gBACZ,qJAAK,CAAC,KAAK,CAAC;YACd,SAAU;gBACR,WAAW;YACb;QACF;QACA;IACF,GAAG,EAAE;IAEL,IAAI,SAAS,qBAAO,qKAAC;QAAI,WAAU;kBAAiC;;;;;;IAEpE,qBACE,qKAAC;QAAI,WAAU;;0BACb,qKAAC,qJAAO;gBAAC,UAAS;;;;;;0BAClB,qKAAC;gBAAG,WAAU;0BAA0C;;;;;;YAEvD,KAAK,MAAM,KAAK,kBACf,qKAAC;gBAAE,WAAU;0BAAgB;;;;;qCAE7B,qKAAC;gBAAI,WAAU;0BACZ,KAAK,GAAG,CAAC,CAAC,oBACT,qKAAC;wBAEC,WAAU;;0CAEV,qKAAC;gCAAG,WAAU;0CAAuC,IAAI,OAAO;;;;;;0CAChE,qKAAC;gCAAE,WAAU;0CAAyB,IAAI,WAAW;;;;;;0CACrD,qKAAC;gCAAE,WAAU;;oCAA6B;oCAAW,IAAI,QAAQ;;;;;;;0CACjE,qKAAC;gCAAE,WAAU;;oCAAwB;oCAAU,IAAI,MAAM;;;;;;;0CACzD,qKAAC;gCACC,SAAS,IACP,qJAAK,CAAC,OAAO,CAAC,CAAC,iBAAiB,EAAE,IAAI,EAAE,EAAE;gCAE5C,WAAU;0CACX;;;;;;;uBAZI,IAAI,EAAE;;;;;;;;;;;;;;;;AAqBzB","debugId":null}}]
}