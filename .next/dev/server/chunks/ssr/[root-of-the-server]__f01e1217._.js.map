{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"sources":["file:///D:/Khedme/Khedme-Web/pages/jobs.js"],"sourcesContent":["// pages/jobs.js\r\nimport { useEffect, useState } from \"react\";\r\nimport toast from \"react-hot-toast\";\r\n\r\nexport default function JobsPage() {\r\n  // âœ… Ensure API_BASE does NOT include /api at the end\r\n  const API_BASE = process.env.NEXT_PUBLIC_API_URL || \"http://localhost:4000\";\r\n\r\n  const [jobs, setJobs] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [applying, setApplying] = useState({}); // { jobId: boolean }\r\n\r\n  // ðŸ”¸ Load all jobs on mount\r\n  useEffect(() => {\r\n    const load = async () => {\r\n      try {\r\n        const res = await fetch(`${API_BASE}/api/jobs/all`);\r\n        if (!res.ok) throw new Error(\"Failed to fetch jobs\");\r\n        const data = await res.json();\r\n        setJobs(data.jobs || []);\r\n      } catch (err) {\r\n        console.error(\"Job load error:\", err);\r\n        toast.error(\"Failed to load jobs\");\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n    load();\r\n  }, []);\r\n\r\n  // ðŸ”¸ Apply for a job\r\n  const handleApply = async (jobId) => {\r\n    // TODO: replace provider_id with real logged-in provider ID once auth is integrated\r\n    const providerId = 1;\r\n    const message = \"Hello â€” I can take this job.\";\r\n\r\n    setApplying((s) => ({ ...s, [jobId]: true }));\r\n    try {\r\n      const res = await fetch(`${API_BASE}/api/jobs/apply`, {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify({ job_id: jobId, provider_id: providerId, message }),\r\n      });\r\n\r\n      const data = await res.json();\r\n      if (!res.ok) throw new Error(data.error || \"Failed to apply\");\r\n      toast.success(\"Application sent âœ…\");\r\n    } catch (err) {\r\n      console.error(\"Apply error:\", err);\r\n      toast.error(err.message || \"Error applying\");\r\n    } finally {\r\n      setApplying((s) => ({ ...s, [jobId]: false }));\r\n    }\r\n  };\r\n\r\n  // ðŸ”¸ Render UI\r\n  return (\r\n    <div className=\"min-h-screen bg-gray-50 p-6\">\r\n      <div className=\"max-w-5xl mx-auto\">\r\n        <h1 className=\"text-3xl font-bold text-orange-600 mb-6\">Open Jobs</h1>\r\n\r\n        {loading ? (\r\n          <p className=\"text-gray-500\">Loading jobsâ€¦</p>\r\n        ) : jobs.length === 0 ? (\r\n          <p className=\"text-gray-500\">No jobs posted yet.</p>\r\n        ) : (\r\n          <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\r\n            {jobs.map((job) => (\r\n              <div\r\n                key={job.id}\r\n                className=\"bg-white p-5 rounded-2xl shadow-sm border border-orange-50\"\r\n              >\r\n                <div className=\"flex justify-between items-start\">\r\n                  <div>\r\n                    <h2 className=\"text-xl font-semibold\">\r\n                      {job.service || \"Service\"}\r\n                    </h2>\r\n                    <p className=\"text-sm text-gray-600 mt-1\">\r\n                      {job.description}\r\n                    </p>\r\n                    <p className=\"text-sm text-gray-500 mt-2\">\r\n                      District:{\" \"}\r\n                      <span className=\"font-medium\">\r\n                        {job.district || \"â€”\"}\r\n                      </span>\r\n                    </p>\r\n                  </div>\r\n                  <div className=\"text-right\">\r\n                    <div className=\"text-lg font-bold text-orange-600\">\r\n                      ${job.budget || \"â€”\"}\r\n                    </div>\r\n                    <div className=\"text-sm text-gray-400\">\r\n                      Posted:{\" \"}\r\n                      {job.created_at\r\n                        ? new Date(job.created_at).toLocaleDateString()\r\n                        : \"â€”\"}\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n\r\n                <div className=\"mt-4\">\r\n                  <button\r\n                    disabled={!!applying[job.id]}\r\n                    onClick={() => handleApply(job.id)}\r\n                    className={`w-full rounded-xl py-2 font-medium transition ${\r\n                      applying[job.id]\r\n                        ? \"bg-gray-300 text-gray-700 cursor-not-allowed\"\r\n                        : \"bg-orange-500 hover:bg-orange-600 text-white\"\r\n                    }`}\r\n                  >\r\n                    {applying[job.id] ? \"Applying...\" : \"Apply Now\"}\r\n                  </button>\r\n                </div>\r\n              </div>\r\n            ))}\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"],"names":[],"mappings":"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","debugId":null}}]
}