{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"sources":["file:///D:/Khedme/Khedme-Web/pages/provider.js"],"sourcesContent":["import { useState, useEffect } from \"react\";\r\nimport { motion } from \"framer-motion\";\r\nimport { LogOut, User, Briefcase, ToggleLeft, ToggleRight } from \"lucide-react\";\r\n\r\nexport default function ProviderDashboard() {\r\n  const [activeTab, setActiveTab] = useState(\"profile\");\r\n  const [available, setAvailable] = useState(true);\r\n\r\n  const tabs = [\r\n    { id: \"profile\", label: \"Profile\", icon: <User className=\"w-4 h-4\" /> },\r\n    { id: \"jobs\", label: \"My Jobs\", icon: <Briefcase className=\"w-4 h-4\" /> },\r\n  ];\r\n\r\n  return (\r\n    <div className=\"min-h-screen bg-gradient-to-b from-orange-50 to-white flex flex-col items-center\">\r\n      {/* Header */}\r\n      <header className=\"w-full bg-white shadow-sm p-4 flex justify-between items-center\">\r\n        <h1 className=\"text-xl font-bold text-orange-500\">Khedme Provider</h1>\r\n        <div className=\"flex items-center gap-4\">\r\n          <button\r\n            onClick={() => setAvailable(!available)}\r\n            className={`flex items-center gap-2 px-3 py-1.5 rounded-full font-medium ${\r\n              available\r\n                ? \"bg-green-100 text-green-600\"\r\n                : \"bg-gray-200 text-gray-600\"\r\n            }`}\r\n          >\r\n            {available ? (\r\n              <ToggleRight className=\"w-4 h-4\" />\r\n            ) : (\r\n              <ToggleLeft className=\"w-4 h-4\" />\r\n            )}\r\n            {available ? \"Available\" : \"Offline\"}\r\n          </button>\r\n\r\n          <button className=\"text-red-500 hover:text-red-600 flex items-center gap-1 font-medium\">\r\n            <LogOut className=\"w-4 h-4\" /> Logout\r\n          </button>\r\n        </div>\r\n      </header>\r\n\r\n      {/* Tabs */}\r\n      <nav className=\"flex gap-3 mt-6\">\r\n        {tabs.map((tab) => (\r\n          <button\r\n            key={tab.id}\r\n            onClick={() => setActiveTab(tab.id)}\r\n            className={`flex items-center gap-2 px-4 py-2 rounded-xl font-medium transition-all ${\r\n              activeTab === tab.id\r\n                ? \"bg-orange-500 text-white shadow-md\"\r\n                : \"bg-gray-100 text-gray-600 hover:bg-gray-200\"\r\n            }`}\r\n          >\r\n            {tab.icon}\r\n            {tab.label}\r\n          </button>\r\n        ))}\r\n      </nav>\r\n\r\n      {/* Content */}\r\n      <motion.div\r\n        key={activeTab}\r\n        initial={{ opacity: 0, y: 15 }}\r\n        animate={{ opacity: 1, y: 0 }}\r\n        transition={{ duration: 0.3 }}\r\n        className=\"w-full max-w-2xl mt-8 bg-white rounded-2xl shadow-lg p-6\"\r\n      >\r\n        {activeTab === \"profile\" && <ProfileSection available={available} />}\r\n        {activeTab === \"jobs\" && <JobsSection />}\r\n      </motion.div>\r\n    </div>\r\n  );\r\n}\r\n\r\n// -------------------- Profile Section --------------------\r\nfunction ProfileSection({ available }) {\r\n  const [profile, setProfile] = useState(null);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n\r\n  useEffect(() => {\r\n    async function fetchProfile() {\r\n      try {\r\n        const res = await fetch(\"https://khedme-api.onrender.com/api/provider/1\"); // temporary test\r\n        if (!res.ok) throw new Error(\"Failed to fetch provider data\");\r\n        const data = await res.json();\r\n        setProfile(data);\r\n      } catch (err) {\r\n        setError(err.message);\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    }\r\n\r\n    fetchProfile();\r\n  }, []);\r\n\r\n  if (loading) return <p className=\"text-gray-500\">Loading profile...</p>;\r\n  if (error) return <p className=\"text-red-500\">Error: {error}</p>;\r\n\r\n  return (\r\n    <div>\r\n      <h2 className=\"text-xl font-bold text-gray-800 mb-4\">Profile Details</h2>\r\n      <div className=\"grid grid-cols-2 gap-4 text-gray-700\">\r\n        <p><strong>Name:</strong> {profile.name}</p>\r\n        <p><strong>Service:</strong> {profile.service}</p>\r\n        <p><strong>Phone:</strong> {profile.phone}</p>\r\n        <p><strong>Status:</strong> {available ? \"Available\" : \"Offline\"}</p>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\n// -------------------- Jobs Section --------------------\r\nfunction JobsSection() {\r\n  const jobs = [\r\n    {\r\n      id: 1,\r\n      title: \"Fix Power Outage\",\r\n      date: \"Oct 25, 2025\",\r\n      status: \"Pending\",\r\n    },\r\n    {\r\n      id: 2,\r\n      title: \"Install Ceiling Fan\",\r\n      date: \"Oct 23, 2025\",\r\n      status: \"Completed\",\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <div>\r\n      <h2 className=\"text-xl font-bold text-gray-800 mb-4\">My Jobs</h2>\r\n      <div className=\"flex flex-col gap-3\">\r\n        {jobs.map((job) => (\r\n          <motion.div\r\n            key={job.id}\r\n            initial={{ opacity: 0, y: 5 }}\r\n            animate={{ opacity: 1, y: 0 }}\r\n            transition={{ delay: job.id * 0.05 }}\r\n            className=\"p-4 rounded-xl border border-gray-100 shadow-sm bg-gray-50 hover:bg-orange-50 transition-all\"\r\n          >\r\n            <h3 className=\"font-semibold text-gray-800\">{job.title}</h3>\r\n            <p className=\"text-sm text-gray-500\">{job.date}</p>\r\n            <span\r\n              className={`inline-block mt-2 text-xs px-3 py-1 rounded-full font-medium ${\r\n                job.status === \"Completed\"\r\n                  ? \"bg-green-100 text-green-600\"\r\n                  : \"bg-yellow-100 text-yellow-600\"\r\n              }`}\r\n            >\r\n              {job.status}\r\n            </span>\r\n          </motion.div>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"],"names":[],"mappings":"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","debugId":null}}]
}