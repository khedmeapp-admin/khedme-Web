module.exports=[70406,(e,t,r)=>{t.exports=e.x("next/dist/compiled/@opentelemetry/api",()=>require("next/dist/compiled/@opentelemetry/api"))},32332,e=>e.a(async(t,r)=>{try{var a=e.i(30056),n=t([a]);[a]=n.then?(await n)():n;let s=new a.Pool({connectionString:process.env.DATABASE_URL,ssl:{rejectUnauthorized:!1}});async function i(e,t){if("PATCH"!==e.method)return t.status(405).json({message:"Method not allowed"});let{id:r}=e.query;try{let{rowCount:e}=await s.query("UPDATE providers SET approved = true WHERE id = $1 RETURNING id",[r]);if(0===e)return t.status(404).json({message:"Provider not found"});t.status(200).json({message:"Provider approved"})}catch(e){console.error("[APPROVE PROVIDER]",e),t.status(500).json({message:"Server error"})}}e.s(["default",()=>i]),r()}catch(e){r(e)}},!1),80577,e=>e.a(async(t,r)=>{try{var a=e.i(26747),n=e.i(90406),i=e.i(44898),s=e.i(62950),o=e.i(32332),l=e.i(7031),d=e.i(81927),p=e.i(46432),u=t([o]);[o]=u.then?(await u)():u;let v=(0,s.hoist)(o,"default"),h=(0,s.hoist)(o,"config"),m=new i.PagesAPIRouteModule({definition:{kind:n.RouteKind.PAGES_API,page:"/api/approve",pathname:"/api/approve",bundlePath:"",filename:""},userland:o,distDir:".next",relativeProjectDir:""});async function c(e,t,r){m.isDev&&(0,p.addRequestMeta)(e,"devRequestTimingInternalsEnd",process.hrtime.bigint());let n="/api/approve";n=n.replace(/\/index$/,"")||"/";let i=await m.prepare(e,t,{srcPage:n});if(!i){t.statusCode=400,t.end("Bad Request"),null==r.waitUntil||r.waitUntil.call(r,Promise.resolve());return}let{query:s,params:o,prerenderManifest:u,routerServerContext:c}=i;try{let r=e.method||"GET",a=(0,l.getTracer)(),i=a.getActiveScopeSpan(),p=m.instrumentationOnRequestError.bind(m),v=async i=>m.render(e,t,{query:{...s,...o},params:o,allowedRevalidateHeaderKeys:[],multiZoneDraftMode:!1,trustHostHeader:!1,previewProps:u.preview,propagateError:!1,dev:m.isDev,page:"/api/approve",internalRevalidate:null==c?void 0:c.revalidate,onError:(...t)=>p(e,...t)}).finally(()=>{if(!i)return;i.setAttributes({"http.status_code":t.statusCode,"next.rsc":!1});let e=a.getRootSpanAttributes();if(!e)return;if(e.get("next.span_type")!==d.BaseServerSpan.handleRequest)return void console.warn(`Unexpected root span type '${e.get("next.span_type")}'. Please report this Next.js issue https://github.com/vercel/next.js`);let s=e.get("next.route");if(s){let e=`${r} ${s}`;i.setAttributes({"next.route":s,"http.route":s,"next.span_name":e}),i.updateName(e)}else i.updateName(`${r} ${n}`)});i?await v(i):await a.withPropagatedContext(e.headers,()=>a.trace(d.BaseServerSpan.handleRequest,{spanName:`${r} ${n}`,kind:l.SpanKind.SERVER,attributes:{"http.method":r,"http.target":e.url}},v))}catch(e){if(m.isDev)throw e;(0,a.sendError)(t,500,"Internal Server Error")}finally{null==r.waitUntil||r.waitUntil.call(r,Promise.resolve())}}e.s(["config",0,h,"default",0,v,"handler",()=>c]),r()}catch(e){r(e)}},!1)];

//# sourceMappingURL=%5Broot-of-the-server%5D__2a24d16b._.js.map